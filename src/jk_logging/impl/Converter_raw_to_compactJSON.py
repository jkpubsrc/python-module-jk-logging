


import os
import datetime
import typing
import json






class Converter_raw_to_compactJSON(object):

	################################################################################################################################
	## Constructor
	################################################################################################################################

	################################################################################################################################
	## Public Properties
	################################################################################################################################

	################################################################################################################################
	## Helper Methods
	################################################################################################################################

	################################################################################################################################
	## Public Methods
	################################################################################################################################

	def logEntry_to_json(self, rawLogEntry:typing.Union[tuple,list]) -> list:
		sType = rawLogEntry[0]
		jsonLogEntry = list(rawLogEntry)
		jsonLogEntry[5] = int(rawLogEntry[5])		# log level

		if sType == "txt":
			assert len(rawLogEntry) == 7
			# nothing more to convert
			pass

		elif sType == "ex":
			assert len(rawLogEntry) == 9
			# nothing more to convert
			pass

		elif sType == "desc":
			assert len(rawLogEntry) == 8
			# convert list of nested elements
			if rawLogEntry[7] is not None:
				jsonLogEntry[7] = [
					self.logEntry_to_json(x) for x in rawLogEntry[7]
				]

		else:
			raise Exception("Implementation Error!")

		return jsonLogEntry
	#

	################################################################################################################################
	## Static Methods
	################################################################################################################################

#







