


import os
import datetime
import typing
import json

from ..EnumLogLevel import EnumLogLevel






class Converter_compactJSON_to_raw(object):

	################################################################################################################################
	## Constructor
	################################################################################################################################

	################################################################################################################################
	## Public Properties
	################################################################################################################################

	################################################################################################################################
	## Helper Methods
	################################################################################################################################

	################################################################################################################################
	## Public Methods
	################################################################################################################################

	def json_to_logEntry(self, jsonLogEntry:list) -> list:
		assert isinstance(jsonLogEntry, list)

		rawLogEntry = list(jsonLogEntry)
		rawLogEntry[5] = EnumLogLevel.parse(jsonLogEntry[5])		# log level

		if rawLogEntry[0] == "txt":
			# nothing more to convert
			pass
		elif rawLogEntry[0] == "ex":
			# nothing more to convert
			pass
		elif rawLogEntry[0] == "desc":
			# convert list of nested elements
			if rawLogEntry[7] is not None:
				rawLogEntry[7] = [
					self.json_to_logEntry(x) for x in rawLogEntry[7]
				]
		else:
			raise Exception("Implementation Error!")

		return rawLogEntry
	#

	################################################################################################################################
	## Static Methods
	################################################################################################################################

#







